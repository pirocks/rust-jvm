use std::os::raw::c_void;
use crate::{dcmdArgInfo, dcmdInfo, jboolean, jint, jlong, jlongArray, jmmBoolAttribute, jmmExtAttributeInfo, jmmGCStat, jmmLongAttribute, jmmOptionalSupport, jmmStatisticType, jmmThresholdType, jmmVMGlobal, JNIEnv, jobject, jobjectArray, jstring, jvalue};

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JMMInterfaceNamedReservedPointers {
    pub jvm_state: *mut c_void,
    pub GetOneThreadAllocatedMemory: Option<unsafe extern "C" fn(env: *mut JNIEnv, thread_id: jlong) -> jlong>,
    pub GetVersion: Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jint>,
    pub GetOptionalSupport: Option<unsafe extern "C" fn(env: *mut JNIEnv, support_ptr: *mut jmmOptionalSupport) -> jint>,
    pub GetInputArguments: Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jobject>,
    pub GetThreadInfo: Option<unsafe extern "C" fn(env: *mut JNIEnv, ids: jlongArray, maxDepth: jint, infoArray: jobjectArray) -> jint>,
    pub GetInputArgumentArray: Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jobjectArray>,
    pub GetMemoryPools: Option<unsafe extern "C" fn(env: *mut JNIEnv, mgr: jobject) -> jobjectArray>,
    pub GetMemoryManagers: Option<unsafe extern "C" fn(env: *mut JNIEnv, pool: jobject) -> jobjectArray>,
    pub GetMemoryPoolUsage: Option<unsafe extern "C" fn(env: *mut JNIEnv, pool: jobject) -> jobject>,
    pub GetPeakMemoryPoolUsage: Option<unsafe extern "C" fn(env: *mut JNIEnv, pool: jobject) -> jobject>,
    pub GetThreadAllocatedMemory: Option<unsafe extern "C" fn(env: *mut JNIEnv, ids: jlongArray, sizeArray: jlongArray)>,
    pub GetMemoryUsage: Option<unsafe extern "C" fn(env: *mut JNIEnv, heap: jboolean) -> jobject>,
    pub GetLongAttribute: Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, att: jmmLongAttribute) -> jlong>,
    pub GetBoolAttribute: Option<unsafe extern "C" fn(env: *mut JNIEnv, att: jmmBoolAttribute) -> jboolean>,
    pub SetBoolAttribute: Option<unsafe extern "C" fn(env: *mut JNIEnv, att: jmmBoolAttribute, flag: jboolean) -> jboolean>,
    pub GetLongAttributes: Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, atts: *mut jmmLongAttribute, count: jint, result: *mut jlong) -> jint>,
    pub FindCircularBlockedThreads: Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jobjectArray>,
    pub GetThreadCpuTime: Option<unsafe extern "C" fn(env: *mut JNIEnv, thread_id: jlong) -> jlong>,
    pub GetVMGlobalNames: Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jobjectArray>,
    pub GetVMGlobals: Option<unsafe extern "C" fn(env: *mut JNIEnv, names: jobjectArray, globals: *mut jmmVMGlobal, count: jint) -> jint>,
    pub GetInternalThreadTimes: Option<unsafe extern "C" fn(env: *mut JNIEnv, names: jobjectArray, times: jlongArray) -> jint>,
    pub ResetStatistic: Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jvalue, type_: jmmStatisticType) -> jboolean>,
    pub SetPoolSensor: Option<unsafe extern "C" fn(env: *mut JNIEnv, pool: jobject, type_: jmmThresholdType, sensor: jobject)>,
    pub SetPoolThreshold: Option<unsafe extern "C" fn(env: *mut JNIEnv, pool: jobject, type_: jmmThresholdType, threshold: jlong) -> jlong>,
    pub GetPoolCollectionUsage: Option<unsafe extern "C" fn(env: *mut JNIEnv, pool: jobject) -> jobject>,
    pub GetGCExtAttributeInfo: Option<unsafe extern "C" fn(env: *mut JNIEnv, mgr: jobject, ext_info: *mut jmmExtAttributeInfo, count: jint) -> jint>,
    pub GetLastGCStat: Option<unsafe extern "C" fn(env: *mut JNIEnv, mgr: jobject, gc_stat: *mut jmmGCStat)>,
    pub GetThreadCpuTimeWithKind: Option<unsafe extern "C" fn(env: *mut JNIEnv, thread_id: jlong, user_sys_cpu_time: jboolean) -> jlong>,
    pub GetThreadCpuTimesWithKind: Option<unsafe extern "C" fn(env: *mut JNIEnv, ids: jlongArray, timeArray: jlongArray, user_sys_cpu_time: jboolean)>,
    pub DumpHeap0: Option<unsafe extern "C" fn(env: *mut JNIEnv, outputfile: jstring, live: jboolean) -> jint>,
    pub FindDeadlocks: Option<unsafe extern "C" fn(env: *mut JNIEnv, object_monitors_only: jboolean) -> jobjectArray>,
    pub SetVMGlobal: Option<unsafe extern "C" fn(env: *mut JNIEnv, flag_name: jstring, new_value: jvalue)>,
    pub DumpThreadsMaxDepth: Option<unsafe extern "C" fn(env: *mut JNIEnv, ids: jlongArray, lockedMonitors: jboolean, lockedSynchronizers: jboolean, maxDepth: jint) -> jobjectArray>,
    pub DumpThreads: Option<unsafe extern "C" fn(env: *mut JNIEnv, ids: jlongArray, lockedMonitors: jboolean, lockedSynchronizers: jboolean) -> jobjectArray>,
    pub SetGCNotificationEnabled: Option<unsafe extern "C" fn(env: *mut JNIEnv, mgr: jobject, enabled: jboolean)>,
    pub GetDiagnosticCommands: Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jobjectArray>,
    pub GetDiagnosticCommandInfo: Option<unsafe extern "C" fn(env: *mut JNIEnv, cmds: jobjectArray, infoArray: *mut dcmdInfo)>,
    pub GetDiagnosticCommandArgumentsInfo: Option<unsafe extern "C" fn(env: *mut JNIEnv, commandName: jstring, infoArray: *mut dcmdArgInfo)>,
    pub ExecuteDiagnosticCommand: Option<unsafe extern "C" fn(env: *mut JNIEnv, command: jstring) -> jstring>,
    pub SetDiagnosticFrameworkNotificationEnabled: Option<unsafe extern "C" fn(env: *mut JNIEnv, enabled: jboolean)>,
}

